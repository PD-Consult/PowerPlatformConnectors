{
  "swagger": "2.0",
  "info": {
    "title": "Payconiq Merchant Payment V3 API Reference",
    "version": "3.0.0",
    "description": "The main API documentation can be found on the [Payconiq Developer Portal.](https://developer.payconiq.com/online-payments-dock/)\n\nThe Payconiq API is organized around REST and uses HTTP response codes to indicate API errors. In addition, standard HTTP features such as header authentication and HTTP verbs which are understood by off the shelf HTTP clients across all the programming languages are also used. JSON bodies are used in requests and returned in relevant API responses, including errors. APIs intended to support the merchant/partner's payment flow on creation, cancelation, search and refunds.\n\nProd Url: [https://api.payconiq.com/v3](https://api.payconiq.com/v3)\n\nEXT Url: [https://api.ext.payconiq.com/v3](https://api.ext.payconiq.com/v3)",
    "contact": {
      "name": "Payconiq Developer Support",
      "email": "devsupport@payconiq.com",
      "url": "https://developer.payconiq.com/online-payments-dock/"
    }
  },
  "host": "api.ext.payconiq.com",
  "paths": {
    "/payments/{paymentId}": {
      "get": {
        "responses": {
          "200": {
            "description": "Payment details",
            "schema": {
              "$ref": "#/definitions/get_payment_response"
            },
            "examples": {
              "application/json": {
                "paymentId": "5bdaf066b93d1c000bde9683",
                "createdAt": "2018-11-01T12:24:06.004Z",
                "expireAt": "2018-11-01T12:26:06.004Z",
                "currency": "EUR",
                "status": "SUCCEEDED",
                "creditor": {
                  "profileId": "5b71369f5832fd22658e0ef4",
                  "merchantId": "5b71369f5832fd09188e0915",
                  "name": "Merchant Name",
                  "iban": "NL47FRBK0293409698",
                  "callbackUrl": "https://www.testcallback.com/payconiq/payment"
                },
                "debtor": {
                  "name": "John",
                  "iban": "*************12636"
                },
                "amount": 10,
                "transferAmount": 10,
                "tippingAmount": 0,
                "totalAmount": 10,
                "description": "Otto's Payment Test",
                "bulkId": "centraal station pos-2",
                "_links": {
                  "self": {
                    "href": "https://api.ext.payconiq.com/v3/payments/5bdaf066b93d1c000bde9683"
                  },
                  "deeplink": {
                    "href": "https://payconiq.com/pay/2/5bdaf066b93d1c000bde9683"
                  },
                  "qrcode": {
                    "href": "https://portal.ext.payconiq.com/qrcode?c=https%3A%2F%2Fpayconiq.com%2Fpay%2F2%2F5bdaf066b93d1c000bde9683"
                  },
                  "refund": {
                    "href": "https://api.ext.payconiq.com/v3/payments/5bdaf066b93d1c000bde9683/debtor/refundIban"
                  }
                }
              }
            }
          },
          "401": {
            "description": "**Error Codes**\n* `UNAUTHORIZED` - The user not have an API Key or API Key is incorrect.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "**Error Codes**\n* `ACCESS_DENIED` - The API key could not be verified or the API key does not contain the required authority to access the resource requested.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "**Error Codes**\n* `PAYMENT_NOT_FOUND`: Payment could not be found for the corresponding payment id.\n",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "429": {
            "description": "Too Many Requests\n"
          },
          "500": {
            "description": "**Error Codes**\n* `TECHNICAL_ERROR` - Technical error in the Payconiq payment service.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "503": {
            "description": "**Error Codes**"
          }
        },
        "description": "# Get Payment Details\n\nPayment details of an existing payment may be obtained. A unique payment id is passed from a payment creation request and Payconiq will return the corresponding payment information.\n\nNote: It is recommended to implement this as a fallback option to obtaining the response via the callback URL.",
        "operationId": "merchant-get-payment",
        "tags": [
          "Merchant Endpoints"
        ],
        "security": [
          {
            "api_key_payment_profile": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "paymentId",
            "type": "string",
            "required": true,
            "minLength": 24,
            "maxLength": 24,
            "description": "The unique Payconiq identifier of a payment as provided by the create payment service."
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string",
            "required": true,
            "default": "application/json"
          }
        ],
        "summary": "Get Payment Details"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Payment is successfully cancelled"
          },
          "401": {
            "description": "* `UNAUTHORIZED` - The user not have an API Key or API Key is incorrect.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "* `ACCESS_DENIED` - The API key could not be verified or the API key does not contain the required authority to access the resource requested.\n* `CALLER_NOT_ALLOWED_TO_CANCEL` - The merchant is not allowed to cancel this payment.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "* `PAYMENT_NOT_FOUND` - Payment could not be found for the corresponding payment id.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "422": {
            "description": "* `PAYMENT_NOT_PENDING` - Payment is not in a pending or identify state.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "429": {
            "description": "Too Many Requests\n"
          },
          "500": {
            "description": "* `TECHNICAL_ERROR` - Technical error in the Payconiq payment service.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "description": "# Cancel Payment\n\nThis endpoint is used to cancel a created Payconiq payment. A payment can only be cancelled only if the status is either PENDING or IDENTIFIED. Once cancelled, the status of the payment is set to CANCELLED.",
        "tags": [
          "Merchant Endpoints"
        ],
        "operationId": "cancel_payment",
        "summary": "Cancel Payment",
        "security": [
          {
            "api_key_payment_profile": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "paymentId",
            "type": "string",
            "required": true,
            "maxLength": 24,
            "minLength": 24,
            "description": "The unique identifier of a payment as provided by the create payment service."
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ]
      }
    },
    "/payments/search": {
      "post": {
        "responses": {
          "200": {
            "description": "List of payments",
            "schema": {
              "$ref": "#/definitions/PaymentSearchResponse"
            },
            "examples": {
              "application/json": {
                "size": 2,
                "totalPages": 7,
                "totalElements": 13,
                "number": 0,
                "details": [
                  {
                    "paymentId": "5bdaf066b93d1c000bde9683",
                    "createdAt": "2018-11-01T12:24:06.004Z",
                    "expireAt": "2018-11-01T12:26:06.004Z",
                    "currency": "EUR",
                    "status": "SUCCEEDED",
                    "creditor": {
                      "profileId": "5b71369f5832fd22658e0ef4",
                      "merchantId": "5b71369f5832fd09188e0915",
                      "name": "Merchant Name",
                      "iban": "NL47FRBK0293409698",
                      "callbackUrl": "https://www.testcallback.com/payconiq/payment"
                    },
                    "debtor": {
                      "name": "John",
                      "iban": "*************12636"
                    },
                    "amount": 10,
                    "transferAmount": 10,
                    "tippingAmount": 0,
                    "totalAmount": 10,
                    "description": "Otto's Payment Test",
                    "bulkId": "centraal station pos-2",
                    "_links": {
                      "self": {
                        "href": "https://api.ext.payconiq.com/v3/payments/5bdaf066b93d1c000bde9683"
                      },
                      "deeplink": {
                        "href": "https://payconiq.com/pay/2/5bdaf066b93d1c000bde9683"
                      },
                      "qrcode": {
                        "href": "https://portal.ext.payconiq.com/qrcode?c=https%3A%2F%2Fpayconiq.com%2Fpay%2F2%2F5bdaf066b93d1c000bde9683"
                      },
                      "refund": {
                        "href": "https://api.ext.payconiq.com/v3/payments/5bdaf066b93d1c000bde9683/debtor/refundIban"
                      }
                    }
                  },
                  {
                    "paymentId": "5bdaf066b93d1c000bde9683",
                    "createdAt": "2018-11-01T12:24:06.004Z",
                    "expireAt": "2018-11-01T12:26:06.004Z",
                    "currency": "EUR",
                    "status": "SUCCEEDED",
                    "creditor": {
                      "profileId": "5b71369f5832fd22658e0ef4",
                      "merchantId": "5b71369f5832fd09188e0915",
                      "name": "Merchant Name",
                      "iban": "NL47FRBK0293409698",
                      "callbackUrl": "https://www.testcallback.com/payconiq/payment"
                    },
                    "debtor": {
                      "name": "John",
                      "iban": "*************12636"
                    },
                    "amount": 10,
                    "transferAmount": 10,
                    "tippingAmount": 0,
                    "totalAmount": 10,
                    "description": "Otto's Payment Test",
                    "bulkId": "centraal station pos-2",
                    "_links": {
                      "self": {
                        "href": "https://api.ext.payconiq.com/v3/payments/5bdaf066b93d1c000bde9683"
                      },
                      "deeplink": {
                        "href": "https://payconiq.com/pay/2/5bdaf066b93d1c000bde9683"
                      },
                      "qrcode": {
                        "href": "https://portal.ext.payconiq.com/qrcode?c=https%3A%2F%2Fpayconiq.com%2Fpay%2F2%2F5bdaf066b93d1c000bde9683"
                      },
                      "refund": {
                        "href": "https://api.ext.payconiq.com/v3/payments/5bdaf066b93d1c000bde9683/debtor/refundIban"
                      }
                    }
                  }
                ]
              }
            }
          },
          "401": {
            "description": "**Error Codes**\n* `UNAUTHORIZED` - The user not have an API Key or API Key is incorrect."
          },
          "403": {
            "description": "**Error Codes**\n* `ACCESS_DENIED` - The API key could not be verified or the API key does not contain the required authority to access the resource requested."
          },
          "429": {
            "description": "Too Many Requests\n"
          },
          "500": {
            "description": "**Error Codes**\n* `TECHNICAL_ERROR` - Technical error in the Payconiq payment service."
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "description": "# Get Payments List\n\nThis endpoint is use to retrieve a list of a Payconiq payments. The page and size parameters are used to specify how many records to return as well as filter the results for the total number of records returned per page. By default the latest 50 payments are returned per request and are sorted by creation date in descending order.\n",
        "operationId": "search",
        "tags": [
          "Merchant Endpoints"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Payments List",
        "security": [
          {
            "api_key_payment_profile": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "integer",
            "description": "Zero based page index in the list request.\n**NB:** The page defaults to 0 if not present in the request path.",
            "minimum": 0
          },
          {
            "in": "query",
            "name": "size",
            "type": "integer",
            "description": "The size of the page to be returned in the list.\n**NB:** The size defaults to 50 if not present in the request path.",
            "minimum": 0
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/payment-search-query"
            },
            "description": "This endpoint is use to retrieve a list of a Payconiq payments. The page and size parameters are used to specify how many records to return as well as filter the results for the total number of records returned per page. By default the latest 50 payments are returned per request and are sorted by creation date in descending order.",
            "x-examples": {
              "application/json": {
                "from": "2018-08-01T00:10:10.000Z",
                "to": "2018-08-31T00:10:10.999Z",
                "paymentStatuses": [
                  "SUCCEEDED"
                ],
                "reference": "1234568"
              }
            }
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ]
      }
    },
    "/payments": {
      "post": {
        "responses": {
          "201": {
            "description": "Payment has been created successfully",
            "schema": {
              "$ref": "#/definitions/payment_create_response"
            },
            "examples": {
              "application/json": {
                "paymentId": "5aa9a9700000000000000000",
                "status": "PENDING",
                "createdAt": "2018-09-18T11:43:29.160Z",
                "expiresAt": "2018-09-18T11:43:29.160Z",
                "description": "Sample description",
                "reference": "987456264",
                "amount": 112,
                "currency": "EUR",
                "creditor": {
                  "profileId": "5b71369f5832fd22658e0ef4",
                  "merchantId": "5b71369f5832fd09188e0915",
                  "name": "Merchant Name",
                  "iban": "NL47FRBK0293409698",
                  "callbackUrl": "https://www.testcallback.com/payconiq/payment"
                },
                "_links": {
                  "self": {
                    "href": "https://api.ext.payconiq.com/v3/payments/5bdb1685b93d1c000bde96f2"
                  },
                  "deeplink": {
                    "href": "https://payconiq.com/pay/2/5bdb1685b93d1c000bde96f2"
                  },
                  "qrcode": {
                    "href": "https://portal.ext.payconiq.com/qrcode?c=https%3A%2F%2Fpayconiq.com%2Fpay%2F2%2F5bdb1685b93d1c000bde96f2"
                  },
                  "cancel": {
                    "href": "https://api.ext.payconiq.com/v3/payments/5bdb1685b93d1c000bde96f2"
                  }
                }
              }
            }
          },
          "400": {
            "description": "**Error Codes**\n* `BODY_MISSING`: A JSON body needs to be provided.\n* `FIELD_IS_REQUIRED`: A mandatory field is missing from the JSON request.\n* `FIELD_IS_INVALID` - A field provided is not valid. Eg: The length of a field exceeds what is required.",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "examples": {
              "application/json": {
                "traceId": "b2586833395d4750",
                "spanId": "c235e54376fab4b9",
                "code": "FIELD_IS_REQUIRED",
                "message": "Field 'amount' is mandatory"
              }
            }
          },
          "401": {
            "description": "**Error Codes**\n* `UNAUTHORIZED` - The user not have an API Key or API Key is incorrect.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "**Error Codes**\n* `ACCESS_DENIED` - The API key could not be verified or the API key does not contain the required authority to access the resource requested.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "**Error Codes**\n* `MERCHANT_PROFILE_NOT_FOUND` - The merchant profile for creating a payment does not exist."
          },
          "422": {
            "description": "**Error Codes**\n* `UNABLE_TO_PAY_CREDITOR` - This could be returned for multiple reasons in case something goes wrong.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "429": {
            "description": "Too Many Requests\n"
          },
          "500": {
            "description": "**Error Codes**\n* `TECHNICAL_ERROR` - Technical error in the Payconiq payment service.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "503": {
            "description": "**Error Codes**\n* `TRY_AGAIN_LATER` - one of the internal services is unavailable",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "# Create Payment\n\nIn order to begin a payment, you need to create a payment via the Payconiq through a POST request. A unique payment identifier is valid for two minutes (120 seconds) after which it expires. If a payment does not take place within these two minutes, a new payment has to be created.\n\nOnboarded merchants should have API keys for each product. The API key contains the necesssary information required to find the correct merchant to process payments on their behalf.",
        "summary": "Create Payment",
        "security": [
          {
            "api_key_payment_profile": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/payment_create_request"
            },
            "x-examples": {
              "application/json": {
                "amount": "100",
                "currency": "EUR",
                "callbackUrl": "https://dummy.network/api/v1/orders/payconiq",
                "description": "Test payment 12345",
                "reference": "12345",
                "bulkId": "Bulk-1-200"
              }
            }
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "operationId": "create",
        "tags": [
          "Merchant Endpoints"
        ],
        "x-ms-visibility": "important"
      }
    },
    "/payments/{paymentId}/debtor/refundIban": {
      "get": {
        "responses": {
          "200": {
            "description": "The IBAN of the debtor used in the specified payment",
            "schema": {
              "$ref": "#/definitions/refund-response"
            },
            "examples": {
              "application/json": {
                "iban": "NL77ABNA1111111111"
              }
            }
          },
          "401": {
            "description": "**Error Codes**\n* `UNAUTHORIZED` - The user not have an API Key or API Key is incorrect."
          },
          "403": {
            "description": "**Error Codes**\n* `ACCESS_DENIED` - The API key could not be verified or the API key does not contain the required authority to access the resource requested.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "**Error Codes**\n* `PAYMENT_NOT_FOUND`: Payment could not be found for the corresponding payment id.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "422": {
            "description": "**Error Codes**\n* `REFUND_NOT_ALLOWED`: The payment is a consumer payment(peer2peer or payment request).\n* `REFUND_NOT_AVAILABLE`: The details of the consumer is not available yet.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "429": {
            "description": "Too many requests\n"
          },
          "500": {
            "description": "**Error Codes**\n* `TECHNICAL_ERROR` - Technical error in the Payconiq payment service."
          },
          "503": {
            "description": ""
          }
        },
        "description": "# Get Refund IBAN\n\nThis endpoint is used to retrieve the IBAN of the consumer for the purpose of performing refunds to the consumer. This endpoint does not handle the actual transfer of money. The merchant or partner is responsible for actual transfer of funds to the consumer. Getting the IBAN for refund only applies when the payment is SUCCEEDED and the consumer is still an active Payconiq user.",
        "operationId": "create-refund",
        "tags": [
          "Refunds"
        ],
        "security": [
          {
            "api_key_payment_profile": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "paymentId",
            "type": "string",
            "required": true,
            "description": "The unique identifier of a payment as provided by the create payment service.",
            "maxLength": 24,
            "minLength": 24
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string",
            "default": "application/json"
          }
        ],
        "summary": "Get Refund IBAN"
      }
    }
  },
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "definitions": {
    "get_payment_response": {
      "type": "object",
      "title": "GetPaymentResponse",
      "description": "Response containing information on the requested payment.",
      "properties": {
        "paymentId": {
          "type": "string",
          "description": "The unique Payconiq payment id.",
          "minLength": 24,
          "maxLength": 24,
          "example": "5bdaf066b93d1c000bde9683"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date and time of the Payconiq payment.",
          "example": "2018-11-01T12:24:06.004Z"
        },
        "expireAt": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when a Payconiq payment expires.",
          "example": "2018-11-01T12:26:06.004Z"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "status": {
          "$ref": "#/definitions/merchant-payment-status"
        },
        "creditor": {
          "$ref": "#/definitions/payment_creditor_response"
        },
        "debtor": {
          "type": "object",
          "description": "The consumer account object that makes payments to the merchant",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of Debtor",
              "example": "John"
            },
            "iban": {
              "type": "string",
              "description": "IBAN of Debtor masked",
              "example": "*************12636"
            }
          }
        },
        "amount": {
          "type": "integer",
          "format": "int64",
          "description": "Payment amount in Euro cents. If no amount was requested by creditor, this will be 0",
          "example": 100
        },
        "transferAmount": {
          "type": "integer",
          "format": "int64",
          "description": "The amount the consumer will be charged in Euro cents.",
          "example": 100
        },
        "tippingAmount": {
          "type": "integer",
          "format": "int64",
          "description": "The amount added as a tip by the consumer in Euro cents.",
          "example": 0
        },
        "totalAmount": {
          "type": "integer",
          "format": "int64",
          "description": "The amount added as a tip by the consumer in Euro cents.",
          "example": 100
        },
        "description": {
          "type": "string",
          "description": "Custom description of the payment. This will be shown to the consumer when making payments and will be present on the bank statement of the merchant and consumer for reconciliation purposes. Only the first 35 characters are used for the remittance information.",
          "example": "Test Description"
        },
        "message": {
          "type": "string",
          "description": "Custom message from the consumer."
        },
        "reference": {
          "type": "string",
          "description": "Merchant’s payment reference used to reference the Payconiq payment in the merchant’s system.",
          "example": "12346816AFV"
        },
        "bulkId": {
          "type": "string",
          "description": "A field set by the calling party used to reference a bulk batch payment. If not set, bulking is done based on the IBAN.",
          "example": "Bulk-1-200"
        },
        "_links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "paymentId",
        "createdAt",
        "expireAt",
        "currency",
        "status",
        "creditor",
        "amount",
        "transferAmount",
        "totalAmount"
      ]
    },
    "payment_create_request": {
      "type": "object",
      "title": "PaymentCreateRequest",
      "description": "Request to initiate/create a payment as a Merchant",
      "properties": {
        "reference": {
          "type": "string",
          "description": "External payment reference used to reference the Payconiq payment in the calling party's system.",
          "maxLength": 35,
          "example": "987456264"
        },
        "bulkId": {
          "type": "string",
          "maxLength": 35,
          "description": "A field set by the calling party used to reference a bulk batch payment. If not set, bulking is done based on the IBAN.",
          "example": "Bulk-1-200"
        },
        "amount": {
          "type": "integer",
          "description": "Payment amount in Euro cents.",
          "format": "int64",
          "minimum": 1,
          "exclusiveMinimum": false,
          "maximum": 999999,
          "example": 100
        },
        "currency": {
          "type": "string",
          "enum": [
            "EUR"
          ],
          "default": "EUR",
          "description": "Payment currency code in ISO 4217 format. Only Euros(EUR) supported at the moment. [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217)",
          "example": "EUR"
        },
        "description": {
          "type": "string",
          "description": "Custom description of the payment. This will be shown to the consumer when making payments and will be present on the bank statement of the merchant and consumer for reconciliation purposes. Only the first 35 characters are used for the remittance information.",
          "maxLength": 140,
          "example": "Tes Description"
        },
        "callbackUrl": {
          "type": "string",
          "description": "A url to which the merchant or partner will be notified of a payment. Must be Https for production.",
          "format": "uri",
          "example": "https://www.testcallback.com/payconiq/payment"
        }
      },
      "required": [
        "amount"
      ]
    },
    "payment_create_response": {
      "type": "object",
      "title": "PaymentCreateResponse",
      "description": "Object returned if the payment gets successfully created",
      "properties": {
        "paymentId": {
          "type": "string",
          "description": "The unique Payconiq payment id.",
          "minLength": 24,
          "maxLength": 24
        },
        "status": {
          "type": "string",
          "enum": [
            "PENDING"
          ],
          "description": "The status of the Payconiq payment.",
          "example": "PENDING"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date and time of the Payconiq payment.",
          "example": "2018-09-18T11:43:29.160Z"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when a Payconiq payment expires.",
          "example": "2018-09-18T11:43:29.160Z"
        },
        "description": {
          "type": "string",
          "description": "Custom description of the payment. This will be shown to the consumer when making payments and will be present on the bank statement of the merchant and consumer for reconciliation purposes. Only the first 35 characters are used for the remmittance information.",
          "example": "Sample description"
        },
        "reference": {
          "type": "string",
          "description": "Merchant’s payment reference used to reference the Payconiq payment in the merchant’s system.",
          "example": "987456264"
        },
        "amount": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "exclusiveMinimum": false,
          "maximum": 999999,
          "description": "Payment amount in Euro cents.",
          "example": 100
        },
        "currency": {
          "type": "string",
          "description": "Payment currency code in ISO 4217 format. Only Euros(EUR) supported at the moment.",
          "example": "EUR"
        },
        "creditor": {
          "$ref": "#/definitions/payment_creditor_response"
        },
        "_links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "paymentId",
        "status",
        "createdAt",
        "expiresAt",
        "amount",
        "currency",
        "creditor",
        "_links"
      ]
    },
    "merchant-callback": {
      "type": "object",
      "title": "MerchantCallback",
      "properties": {
        "paymentId": {
          "type": "string",
          "description": "The unique Payconiq payment id.",
          "minLength": 24,
          "maxLength": 24,
          "example": "687e0f4c373dbc4f381d31cd"
        },
        "transferAmount": {
          "type": "integer",
          "description": "The amount the consumer will be charged in Euro cents",
          "format": "int64",
          "example": 700
        },
        "tippingAmount": {
          "type": "integer",
          "description": "The amount added as a tip by the consumer in Euro cents.",
          "format": "int64",
          "example": 0,
          "default": 0
        },
        "totalAmount": {
          "type": "integer",
          "description": "The amount the consumer pays in total in Euro cents.",
          "format": "int64",
          "example": 700
        },
        "currency": {
          "type": "string",
          "default": "EUR",
          "description": "Payment currency code in ISO 4217 format. Only Euros supported at the moment."
        },
        "amount": {
          "type": "integer",
          "description": "Payment amount in Euro cents.",
          "format": "int64",
          "example": 700
        },
        "description": {
          "type": "string",
          "description": "Custom description of the payment. This will be shown to the consumer when making payments and will be present on the bank statement of the merchant and consumer for reconciliation purposes. Only the first 35 characters are used for the remittance information.",
          "example": "Sample description"
        },
        "reference": {
          "type": "string",
          "description": "Merchant’s payment reference used to reference the Payconiq payment in the merchant’s system.",
          "example": "12346816AFV"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date and time of the Payconiq payment.",
          "example": "2018-09-20T10:53:49.875Z"
        },
        "expireAt": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when a Payconiq payment expires.",
          "example": "2018-09-20T10:55:49.875Z"
        },
        "status": {
          "$ref": "#/definitions/merchant-payment-status"
        },
        "debtor": {
          "type": "object",
          "description": "The consumer account object that makes payments to the merchant",
          "required": [
            "name",
            "iban"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the consumer.",
              "example": "John"
            },
            "iban": {
              "type": "string",
              "description": "The masked IBAN of the consumer.",
              "example": "***********42901"
            }
          }
        }
      },
      "required": [
        "paymentId",
        "transferAmount",
        "totalAmount",
        "currency",
        "amount",
        "createdAt",
        "status",
        "debtor"
      ]
    },
    "error": {
      "type": "object",
      "description": "error response received from server",
      "title": "ErrorResponse",
      "properties": {
        "code": {
          "type": "string",
          "description": "Text describing the error that has occurred."
        },
        "message": {
          "type": "string",
          "description": "Text describing the error that has occurred."
        },
        "traceId": {
          "type": "string",
          "description": "The id that is assigned to a single request or job."
        },
        "spanId": {
          "type": "string",
          "description": "The id of work unit where the error occurred."
        }
      },
      "required": [
        "code",
        "message",
        "traceId",
        "spanId"
      ]
    },
    "payment-search-query": {
      "type": "object",
      "title": "PaymentSearchQuery",
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time",
          "default": "today - 1day (yesterday)",
          "description": "The start date and time to filter the search results.\nDefault: Current date and time minus one day. (Now - 1 day)\n\nFormat: YYYY-MM-ddTHH:mm:ss.SSSZ"
        },
        "to": {
          "type": "string",
          "format": "date-time",
          "description": "The end date and time to filter the search results..\nDefault: Current date and time. (Now)\n\nFormat: YYYY-MM-ddTHH:mm:ss.SSSZ"
        },
        "paymentStatuses": {
          "type": "array",
          "description": "An array of payment statuses to filter the search results on.",
          "items": {
            "$ref": "#/definitions/merchant-payment-status"
          }
        },
        "reference": {
          "type": "string",
          "description": "External payment reference used to reference the Payconiq payment in the calling party's system."
        }
      }
    },
    "PaymentSearchResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/AbstractListResponse"
        },
        {
          "type": "object",
          "properties": {
            "details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_payment_response"
              }
            }
          }
        }
      ]
    },
    "AbstractListResponse": {
      "type": "object",
      "properties": {
        "size": {
          "type": "integer",
          "minimum": 0,
          "description": "The total size of elements returned in the current page."
        },
        "totalPages": {
          "type": "integer",
          "description": "Total number of pages that contain the list of results."
        },
        "totalElements": {
          "type": "integer",
          "description": "Total number of elements in the list requested.\n"
        },
        "number": {
          "type": "integer",
          "description": "The current page number."
        }
      },
      "required": [
        "size",
        "totalPages",
        "totalElements",
        "number"
      ]
    },
    "refund-response": {
      "type": "object",
      "title": "RefundResponse",
      "properties": {
        "iban": {
          "type": "string",
          "description": "The IBAN of the consumer"
        }
      },
      "required": [
        "iban"
      ]
    },
    "merchant-payment-status": {
      "type": "string",
      "title": "MerchantPaymentStatus",
      "description": "| Status | Description |\n|--------|-------------|\n| AUTHORIZED |This is the status of a payment before it is set to SUCCEEDED. The user has confirmed the payment, Payconiq's internal checks for payment are successful and the bank has authorized the payment.|\n| AUTHORIZATION_FAILED | This occurs when the bank fails to approve a payment due to validation reasons. These reasons include insufficient funds, limits exceeded, etc.|\n| CANCELLED | A payment has been cancelled by a merchant or consumer. If a payment is cancelled, it cannot be scanned and paid.|\n| EXPIRED | A payment has exceeded the allowable time to pay. If a payment has expired, it cannot be paid. |\n| FAILED | \tSomething has gone wrong while confirming a payment payment such as incorrect consumer or merchant data setup. |\n|IDENTIFIED| A payment has been scanned by a Payconiq supported app and is pending confirmation or cancellation. |\n| PENDING | A payment has been created and it has not been scanned. Consumers can scan QR code linked to this payment and confirm it.|\n| SUCCEEDED | A payment has been authorized and processed successfully by Payconiq and the consumer's bank. This the final end state of a successful payment.|\n\n\n",
      "enum": [
        "PENDING",
        "IDENTIFIED",
        "AUTHORIZED",
        "AUTHORIZATION_FAILED",
        "SUCCEEDED",
        "FAILED",
        "CANCELLED",
        "EXPIRED"
      ],
      "example": "SUCCEEDED"
    },
    "currency": {
      "type": "string",
      "title": "Currency",
      "description": "Currency code. Only EUR is supported [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217)",
      "enum": [
        "EUR"
      ],
      "example": "EUR"
    },
    "payment_creditor_response": {
      "type": "object",
      "title": "PaymentCreditorResponse",
      "description": "The merchant account object set to receive the Payconiq payment from a consumer.",
      "properties": {
        "profileId": {
          "type": "string",
          "description": "The unique payment product identifier of the merchant.",
          "example": "5b71369f5832fd22658e0ef4"
        },
        "merchantId": {
          "type": "string",
          "description": "The unique identifier of a merchant.",
          "example": "5b71369f5832fd09188e0915"
        },
        "name": {
          "type": "string",
          "description": "The merchant’s company name that will be shown to the consumer.",
          "example": "Merchant Name"
        },
        "iban": {
          "type": "string",
          "description": "The bank account of the merchant where payments will be sent to.",
          "example": "NL47FRBK0293409698"
        },
        "callbackUrl": {
          "type": "string",
          "description": "A URL to which the Merchant or Partner will be notified of a payment.\n\nMust be https for production.",
          "example": "https://www.testcallback.com/payconiq/payment"
        }
      }
    },
    "links": {
      "type": "object",
      "title": "Links",
      "description": "Provides information to navigate to our REST interfaces dynamically, by including hypermedia links to them. Note that for some links inclusion depends on the status of the payment (e.g. cancel link will be available on PENDING and refund on SUCCEEDED). The urls can be used by merchants to load the QR codes, perform App2App linking, cancel a payment and get the payment details.",
      "properties": {
        "self": {
          "$ref": "#/definitions/link"
        },
        "deeplink": {
          "$ref": "#/definitions/link"
        },
        "qrcode": {
          "$ref": "#/definitions/link"
        },
        "cancel": {
          "$ref": "#/definitions/link"
        },
        "refund": {
          "$ref": "#/definitions/link"
        }
      },
      "required": [
        "self",
        "deeplink",
        "qrcode"
      ]
    },
    "link": {
      "type": "object",
      "title": "Link",
      "properties": {
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL String."
        }
      },
      "required": [
        "href"
      ]
    }
  },
  "basePath": "/v3",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Merchant Endpoints"
    }
  ],
  "security": [
    {
      "API Key": []
    }
  ]
}
